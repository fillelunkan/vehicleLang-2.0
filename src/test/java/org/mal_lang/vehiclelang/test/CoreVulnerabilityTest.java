package org.mal_lang.vehiclelang.test;

import core.Asset;
import core.AttackStep;
import core.Attacker;
import core.Defense;
import org.junit.jupiter.api.AfterEach;
import org.junit.jupiter.api.Test;

public class CoreVulnerabilityTest {

   @Test
   public void testVulnerability() {

      Service userland = new Service("Userland");
      OperatingSystem kernel = new OperatingSystem("Kernel");
      Account root = new Account("RootAccount");
      Account user = new Account("UserAccount");
      Vulnerability privEsc = new Vulnerability("PrivEsc");

      kernel.addAccount(root);
      userland.addAccount(user);
      userland.addHostMachine(kernel);
      userland.addAccessVulnerabilities(privEsc);
      privEsc.addPrivileges(root);

      Attacker attacker = new Attacker();
      attacker.addAttackPoint(userland.networkConnectUninspected);
      attacker.addAttackPoint(user.assume);

      attacker.attack();

      userland.fullAccess.assertCompromisedInstantaneously();
      kernel.fullAccess.assertCompromisedInstantaneously();
      privEsc.exploit.assertCompromisedWithEffort();
      root.assume.assertCompromisedWithEffort();
      kernel.fullAccess.assertCompromisedWithEffort();
   }

   @Test
   public void testSoftware() {
      Machine machine = new Machine("Machine");
      Service software = new Service("Software");
      Vulnerability vulnerability = new Vulnerability("Vulnerability");

      machine.addMachineExecutedApps(software);
      software.addConnectionVulnerabilities(vulnerability);

      Attacker attacker = new Attacker();
      attacker.addAttackPoint(machine.fullAccess); // Changed it to access because cannot connect to software without machine.fullAccess
      
      attacker.attack();

      vulnerability.exploit.assertCompromisedWithEffort();
    }

   @AfterEach
   public void deleteModel() {
      Asset.allAssets.clear();
      AttackStep.allAttackSteps.clear();
      Defense.allDefenses.clear();
   }

}
